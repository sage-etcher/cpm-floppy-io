*
* https://github.com/sage-etcher/cpm-read-write.git
*
* GitHub:   sage-etcher
* Email:    sage.message@email.com
* Discord:  sage4424
*

*
*  Copyright 2024 Sage I. Hendricks  
*
*  Licensed under the Apache License, Version 2.0 (the "License");  
*  you may not use this file except in compliance with the License.  
*  You may obtain a copy of the License at  
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software  
*  distributed under the License is distributed on an "AS IS" BASIS,  
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
*  See the License for the specific language governing permissions and  
*  limitations under the License.  
*


*CPM STUFF
TPA		EQU	0100H		;CP/M's TRANSIENT PROGRAM AREA
BDOS		EQU	0005H		;SYSCALL CALL ADDR
C$READ		EQU	1		;BDOS CHARACTER INPUT 
C$WRITE		EQU	2		;BDOS CHARACTER OUTPUT
C$WRITESTR	EQU	9		;BDOS STRING OUTPUT
C$READSTR	EQU	10		;BDOS STRING INPUT
DRV$SET		EQU	14		;BDOS DRIVE SELECT
F$OPEN		EQU	15		;BDOS FILE OPEN
F$CLOSE		EQU	16		;BDOS FILE CLOSE
F$READ		EQU	20		;BDOS READ NEXT RECORD (128 BYTES)
F$WRITE		EQU	21		;BDOS WRITE NEXT RECORD "
F$MAKE		EQU	22		;BDOS CREATE FILE
F$DMAOFF	EQU	26		;BDOS SET DMA ADDRESS

SUCCESS		EQU	0		;GENERAL SUCCESS
FAILURE		EQU	0FFH		;GENERAL FAILURE

OK		EQU	0		;FILE IO OKAY
DIRECTORY$FULL	EQU	1		;FILE IO DIRECTORY FULL
DISK$FULL	EQU	2		;FILE IO DISK FULL
INVALID$FCB	EQU	9		;FILE IO INVALID FCB
MEDIA$CHANGED	EQU	10		;FILE IO FILE CHANGED
HARDWARE$ERROR	EQU	0FFH		;FILE IO HARDWARE ERROR

DRIVE$OFF	EQU	'A'		;OFFSET BETWEEN DRIVE LETTER AND ID
MIN$DRIVE$ID	EQU	'A'-DRIVE$OFF	;MINIMUM DRIVE ID
MAX$DRIVE$ID	EQU	'P'-DRIVE$OFF	;MAXIMUM DRIVE ID

*CHARACTERS
LF	EQU	0AH	;LINE FEED ASCII
CR	EQU	0DH	;CARTIDGE RETURN ASCII
TAB	EQU	09H	;TAB ASCII
TERM	EQU	'$'	;STRING TERMINATOR CHARACTER

*CODE START
	ORG	TPA		;SET ORIGIN POINT
	JMP	MAIN		;SKIP PAST COPYRIGHT DISCLAIMER TO CODE

	DB	' COPYRIGHT (C) 2024 SAGE I. HENDRICKS '

MAIN:
	CALL	PROMPT$FILENAME	;PROMPT THE USER FOR THE FILE TO READ FROM
	CALL	DISPLAY$FILE	;PRINTS THE FILE BLOCK BY BLOCK TO THE CONSOLE

EXIT:	RST	0		;WARMBOOT THE SYSTEM, EXIT THE PROGRAM

PUTCH:	;E=CHARACTER
	MVI	C,C$WRITE	;LOAD BDOS PROC ID
	CALL	BDOS		;PRINT THE CHARACTER IN E REG

GETCH:	;RETURN A=CHARACTER
	MVI	C,C$READ	;LOAD BDOS PROC ID
	CALL	BDOS		;GET 1 CHARACTER FROM THE TERMINAL
	RET

PRINT:	;DE=STRING
	MVI	C,C$WRITESTR	;LOAD BDOS PROC ID
	CALL	BDOS		;PRINT THE STRING
	RET

CRLF:
	MVI	E,CR		;LOAD THE CARTRIDGE RETURN CHAR
	CALL	PUTCH		;PRINT THE CHARACTER

	MVI	E,LF		;LOAD THE LINEFEED CHAR
	CALL	PUTCH		;PRINT THE CHARACTER

	RET

PRINTL:	;DE=STRING
	CALL	PRINT		;PRINT THE STRING
	CALL	CRLF		;PRINT THE NEW LINE
	RET

PROMPT$FILENAME:
	RET

DISPLAY$FILE:
	RET


*DATA START
DRIVE$SIZE	EQU	1		;DRIVE IDENTIFIER IS 1 CHAR
FILENAME$SIZE	EQU	8		;FILENAME IS AT MAX 8 CHARS
FILEEXT$SIZE	EQU	3		;EXTENSION IS AT MAX 3 CHARS
FILE$DRIVE:	DS	DRIVE$SIZE
FILE$NAME:	DS	FILENAME$SIZE
FILE$EXT:	DS	FILEEXT$SIZE

RECORD$SIZE	EQU	128			;SIZE OF 1 RECORD
BLOCK$SIZE	EQU	512			;BLOCK SIZE IS 512 BYTES
BLOCK$RECORDS	EQU	BLOCK$SIZE / RECORD$SIZE;# OF RECORDS PER BLOCK	
CONTENT$BLOCK:	DS	BLOCK$SIZE		;STORAGE SPACE FOR 1 BLOCK


	END
